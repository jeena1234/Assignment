{
  "stats": {
    "suites": 11,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2019-02-25T04:13:46.647Z",
    "end": "2019-02-25T04:13:47.509Z",
    "duration": 862,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "9ab4bd0f-2104-4fbb-87e6-289523b5ec2f",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "5fc0d81c-1ecf-49d8-9496-91ba38cea20f",
        "title": "Get Albums",
        "fullFile": "C:\\Assignment\\test\\albums\\get_albums_tests.js",
        "file": "\\test\\albums\\get_albums_tests.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "5298aa47-e1a1-4d0d-9edc-852592ffdcd2",
            "title": "get a particular album",
            "fullFile": "C:\\Assignment\\test\\albums\\get_albums_tests.js",
            "file": "\\test\\albums\\get_albums_tests.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Get Albums get a particular album \"before all\" hook",
                "timedOut": false,
                "duration": 87,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "album.getAlbum(album_id).then(function(resp){\n    response = resp\n    body = resp.body;\n    done();\n})",
                "err": {},
                "isRoot": false,
                "uuid": "4b7fc717-a0d5-4b8f-bb4e-ffb3f40f4961",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be successfull",
                "fullTitle": "Get Albums get a particular album should be successfull",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(response.statusCode).to.equal(200)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "17749220-a379-4541-8e47-355bffbaf18d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return the album with correct id",
                "fullTitle": "Get Albums get a particular album should return the album with correct id",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(body.id).to.equal(album_id)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "d6482314-6286-45f7-bd75-791f46a66e49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return the correct userid for the album",
                "fullTitle": "Get Albums get a particular album should return the correct userid for the album",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(body.userId).to.equal(user_id)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "eabe4990-e356-431c-9342-6eb53d6a3bb1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return the correct title for the album",
                "fullTitle": "Get Albums get a particular album should return the correct title for the album",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(body.title).to.equal(title)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "d00dedd3-ee84-479a-848e-6667dcac0a68",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "17749220-a379-4541-8e47-355bffbaf18d",
              "d6482314-6286-45f7-bd75-791f46a66e49",
              "eabe4990-e356-431c-9342-6eb53d6a3bb1",
              "d00dedd3-ee84-479a-848e-6667dcac0a68"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "9455abef-aca8-47d1-bedb-e368f8270f69",
        "title": "Delete posts",
        "fullFile": "C:\\Assignment\\test\\posts\\delete_posts_test.js",
        "file": "\\test\\posts\\delete_posts_test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "eacb4888-5085-4707-a411-c2c68efea81c",
            "title": "for an existing post user",
            "fullFile": "C:\\Assignment\\test\\posts\\delete_posts_test.js",
            "file": "\\test\\posts\\delete_posts_test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Delete posts for an existing post user \"before all\" hook",
                "timedOut": false,
                "duration": 202,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "posts.deletePost(post_id).then(function(resp){\n    response = resp\n    done();\n})",
                "err": {},
                "isRoot": false,
                "uuid": "cafca6dd-1928-4472-b710-2980ce9e3196",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be able to delete the post",
                "fullTitle": "Delete posts for an existing post user should be able to delete the post",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(response.statusCode).to.equal(200)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "871bcc24-2cc9-4238-baf7-41aaad0c02a1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "871bcc24-2cc9-4238-baf7-41aaad0c02a1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "fd1d1905-7c6d-4eaa-9098-b73ab3568b9a",
        "title": "Get posts",
        "fullFile": "C:\\Assignment\\test\\posts\\get_posts_tests.js",
        "file": "\\test\\posts\\get_posts_tests.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 404 error if no post exixts",
            "fullTitle": "Get posts should return 404 error if no post exixts",
            "timedOut": false,
            "duration": 42,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "posts.getPost(no_post_id).then(function (resp){\n    expect(resp.statusCode).to.equal(404)        \n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "b5a63fd0-e8d5-4dbf-b576-a73737a24b37",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "02b5380e-91b3-4bb6-aaa9-c6179878d24b",
            "title": "get all posts",
            "fullFile": "C:\\Assignment\\test\\posts\\get_posts_tests.js",
            "file": "\\test\\posts\\get_posts_tests.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should get all posts",
                "fullTitle": "Get posts get all posts should get all posts",
                "timedOut": false,
                "duration": 53,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "posts.getPosts().then(function (resp){\n    expect(resp.statusCode).to.equal(200)        \ndone();\n})",
                "err": {},
                "isRoot": false,
                "uuid": "df6211bd-03a2-4e3d-a054-ef828b73bc62",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "df6211bd-03a2-4e3d-a054-ef828b73bc62"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 53,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "349e6186-5933-472d-95f1-2a9ef312b5b3",
            "title": "get a particular posts",
            "fullFile": "C:\\Assignment\\test\\posts\\get_posts_tests.js",
            "file": "\\test\\posts\\get_posts_tests.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Get posts get a particular posts \"before all\" hook",
                "timedOut": false,
                "duration": 44,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "posts.getPost(post_id).then(function(resp){\n    response = resp\n    body = resp.body;\n    done();\n})",
                "err": {},
                "isRoot": false,
                "uuid": "a8cd85ab-c3f0-4a28-b8fd-afe056a93294",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be successfull",
                "fullTitle": "Get posts get a particular posts should be successfull",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(response.statusCode).to.equal(200)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "423f0c31-cfac-44cf-b3c2-c040118b95c7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return the post with correct id",
                "fullTitle": "Get posts get a particular posts should return the post with correct id",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(body.id).to.equal(post_id)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "b07ac79b-98e9-4ba3-ae52-0d70ab290d30",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return the correct userid for the post",
                "fullTitle": "Get posts get a particular posts should return the correct userid for the post",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(body.userId).to.equal(user_id)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "5e238ce5-ffc9-43d2-af59-b49e683eaedd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return the correct title for the post",
                "fullTitle": "Get posts get a particular posts should return the correct title for the post",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(body.title).to.equal(title)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "f598149b-26d5-414e-a6a6-2fbe42f70970",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "423f0c31-cfac-44cf-b3c2-c040118b95c7",
              "b07ac79b-98e9-4ba3-ae52-0d70ab290d30",
              "5e238ce5-ffc9-43d2-af59-b49e683eaedd",
              "f598149b-26d5-414e-a6a6-2fbe42f70970"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [
          "b5a63fd0-e8d5-4dbf-b576-a73737a24b37"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 42,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "923d463d-60a7-4f21-bbb1-c4946cb45f00",
        "title": "Post posts",
        "fullFile": "C:\\Assignment\\test\\posts\\post_posts_tests.js",
        "file": "\\test\\posts\\post_posts_tests.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "a619c1f0-13e5-4fa4-965d-77380419e3ed",
            "title": "user posts a new post",
            "fullFile": "C:\\Assignment\\test\\posts\\post_posts_tests.js",
            "file": "\\test\\posts\\post_posts_tests.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Post posts user posts a new post \"before all\" hook",
                "timedOut": false,
                "duration": 163,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "var data ={\"userId\": userid, \"title\": title, \"body\": body}\nposts.postPost(data).then(function (resp){\n    response = resp\n    body = resp.body;\n    done();\n})",
                "err": {},
                "isRoot": false,
                "uuid": "d1d320af-4aa6-49e5-9be3-df1739f7c405",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [
              {
                "title": "\"after all\" hook",
                "fullTitle": "Post posts user posts a new post \"after all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "posts.deletePost(userid)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "cc4fcd63-8739-406f-8c24-7e9df3b5846d",
                "isHook": true,
                "skipped": false
              }
            ],
            "tests": [
              {
                "title": "should be able to post a new post",
                "fullTitle": "Post posts user posts a new post should be able to post a new post",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(response.statusCode).to.equal(201)    \ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "3b1a1426-853d-4de0-a857-46c1b1e46527",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should have the correct userid",
                "fullTitle": "Post posts user posts a new post should have the correct userid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(body.userId).to.equal(userid)    \ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "528f7a7f-4dff-4e87-a1ef-8fb0afc1723e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should have the correct title",
                "fullTitle": "Post posts user posts a new post should have the correct title",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(body.title).to.equal(title)    \ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "e3d481e6-6d36-4347-af0e-0454b9b9b4d4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3b1a1426-853d-4de0-a857-46c1b1e46527",
              "528f7a7f-4dff-4e87-a1ef-8fb0afc1723e",
              "e3d481e6-6d36-4347-af0e-0454b9b9b4d4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "24769cab-d74c-4490-9cb4-2e1c0885711a",
        "title": "Put posts",
        "fullFile": "C:\\Assignment\\test\\posts\\put_posts_test.js",
        "file": "\\test\\posts\\put_posts_test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "c758b11d-ca5e-4af4-92c0-c13f25f2577b",
            "title": "for an existing post, user",
            "fullFile": "C:\\Assignment\\test\\posts\\put_posts_test.js",
            "file": "\\test\\posts\\put_posts_test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Put posts for an existing post, user \"before all\" hook",
                "timedOut": false,
                "duration": 186,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "var data = {\"userId\": userid, \"title\": title, \"body\": body}\nposts.putPost(post_id,data).then(function (resp){\n    response = resp\n    done();  \n})",
                "err": {},
                "isRoot": false,
                "uuid": "811f98df-e7ff-4762-a706-93c6445133a9",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be able to update the post",
                "fullTitle": "Put posts for an existing post, user should be able to update the post",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(response.statusCode).to.equal(200)\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "541ffac6-8f5c-4f96-8f6a-43699ce0535e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "541ffac6-8f5c-4f96-8f6a-43699ce0535e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}